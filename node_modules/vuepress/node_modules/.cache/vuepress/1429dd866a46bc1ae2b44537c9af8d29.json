{"remainingRequest":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\VersionControl\\gitlearn\\problems.md?vue&type=template&id=ee9c88b4&","dependencies":[{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\VersionControl\\gitlearn\\problems.md","mtime":1564214962662},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559711718187},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1559711718171},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1559711720027}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('p',[_c('strong',[_vm._v(\"一、git查看/修改用户名和密码\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"​\\t在使用git进行push代码的时候，提示：The Requested URL return error 403，表示没有相关权限来push相关代码\")]),_vm._v(\" \"),_c('p',[_vm._v(\"​\\tpush相关代码的那个工程地址与内存和硬盘中缓存的git仓库的账号密码不一致\")]),_vm._v(\" \"),_c('p',[_vm._v(\"解决办法如下：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"执行git config --list，查看user.name和user.email是否与需要push的代码工程仓库账号邮箱一致，不一致需要更改账号\")]),_vm._v(\" \"),_c('li',[_vm._v(\"清除缓存:\\ngit config --local --unset credential.helper\\ngit config --global --unset credential.helper\\ngit config --system --unset credential.helper\")]),_vm._v(\" \"),_c('li',[_vm._v(\"清除缓存后提交代码需要重新输入用户名密码\")]),_vm._v(\" \"),_c('li',[_vm._v(\"查看当前的用户名和邮箱地址：\\ngit config user.name\\ngit config user.email\")]),_vm._v(\" \"),_c('li',[_vm._v(\"修改用户名和邮箱地址:\\ngit config --global user.name \\\"username\\\"\\ngit config --global user.email \\\"email\\\"\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"二、更新代码至远程仓库流程\")])]),_vm._v(\" \"),_c('p',[_c('em',[_c('strong',[_vm._v(\"提交代码前确认当前的分支以及先更新最新的代码！！！\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"git branch 查看当前分支\")]),_vm._v(\" \"),_c('p',[_vm._v(\"git pull 更新代码至本地\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"git status 查看当前工程中modified了哪些文件\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git add . 一次性添加所有修改过的文件\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git commit -m \\\"修改的相关描述XXX\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git push origin master 推送到git 远程仓库\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git log 查看提交日志\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"三、更新远程代码至本地\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"git pull -u origin master:<分支名称>\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认可直接使用git pull\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"四、将文件添加至Index暂存\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"git add用于把要提交的文件的信息添加到索引库中\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"git add .\")]),_vm._v(\"  监控工作区的状态树，把工作时的所有变化提交到暂存区，包括modified和new的文件，但是不包括被删除的文件\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"git add -u\")]),_vm._v(\"  仅监控已经被add的文件（tracked file），将被修改的文件提交到暂存区，不会提交untracked file\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"git add -A\")]),_vm._v(\"   是上面两个命令的功能合集\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"五、删除远程仓库里的文件夹\")])]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"git clone <远程仓库地址>\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git rm -rf <需要删除的文件夹>\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果需要删除的文件太多了，直接在文件夹里删除，不需要使用rm，但删除后需要执行git add .\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git commit -m \\\"描述语句\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git push origin master\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果分支的名称不是master，则提交到git仓库 时，需要显示指定分支名称 git push -u origin master：<分支名称>\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"六、分支相关操作\")])]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"git branch 查看当前分支\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git checkout <分支名称> 切换到新的分支\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git branch <新分支名称>创建新的分支\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"七、使用ssh密钥\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"SSH 公钥默认储存在账户的主目录下的 ~/.ssh 目录\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"cd ./.ssh/\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"ssh-keygen -t rsa -C \\\"email@youremail.com\\\"\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"直接回车就行\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"ls查看下是否生成id_rsa.pub和id_rsa\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"把id_rsa.pub密钥添加到远程仓库中\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"验证下key是否可以正常工作 ssh -T git@github.com\")])])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"八、下载github仓库中的部分文件夹\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"git版本>2.17.1\")]),_vm._v(\" \"),_c('p',[_vm._v(\"要是git的版本低于2.17.1，则需要更新git版本:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"2.17.1之前版本用git update\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"2.17.1之后用git update-git-for-windows\")])])]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"创建新文件夹mkdir projects\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git init\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git remote add -f origin git@github.com:username/responsity.git\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git config core.sparseCheckout true\")]),_vm._v(\" \"),_c('li',[_vm._v(\"echo \\\"远程仓库文件夹路径\\\" >> .git/info/sparse-checkout\")]),_vm._v(\" \"),_c('li',[_vm._v(\"git pull origin master\")])])])}]\n\nexport { render, staticRenderFns }"]}