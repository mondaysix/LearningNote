{"remainingRequest":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\android\\appBase.md?vue&type=template&id=301951d6&","dependencies":[{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\android\\appBase.md","mtime":1561555319705},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559711718187},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1559711718171},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1559711720027}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"android-知识\\\"><a href=\\\"#android-知识\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Android 知识</h1> <h2 id=\\\"四大组件\\\"><a href=\\\"#四大组件\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 四大组件</h2> <blockquote><p><strong>Activity</strong></p></blockquote> <p><strong>生命周期</strong>：onCreate()--&gt;onStart()--&gt;onResume()--&gt;onPause()--&gt;onStop()---&gt;onRestart()--&gt;onDestroy()</p> <p>启动Activity：onCreate()--&gt;onStart()--&gt;onResume()然后Activity进入运行状态</p> <p>当前Activity被其他Activity覆盖,调用onPause()</p> <p>当前ACTIVITY回到前台，调用OnResume</p> <p><strong>启动模式</strong></p> <p>Standard（每次都会创建一个activity）、</p> <p>singleTop（栈顶复用）：若需要创建的activity处于栈顶，则直接复用，onNewIntent（传入新的intent）会被调用。如果没有处于栈顶则和standard模式一致</p> <p>singleTask(栈内复用)：若需要创建的activity处于栈内，则把存在他上面的所有activity都销毁</p> <p>singleInstance(全局单例模式)：整个系统中只有一个</p> <p>启动模式方式：</p> <p>​       manifest.xml中静态指定，launchMode</p> <pre><code>intent中动态指定：addFlags\\n</code></pre> <blockquote><p><strong>Service</strong></p></blockquote> <p>启动方式：startservice和bindservice</p> <p>**startservice：**启动一个服务执行后台任务，不进行通信，停止服务使用stopservice</p> <p>生命周期：startservice—&gt;oncreate---&gt;onstartcommand---&gt;service running—&gt;ondestroy</p> <p>**bindservice:**启动服务可以进行通信，停止服务使用unbindservice</p> <p>生命周期：bindservice---》oncreate---》onbind---》client are bound to service---》onunbind---》ondestroy</p> <p>service需要注册在manifest</p> <p>两者的区别：startservice与客户端是否退出没有关联关系，即使客户端停止运行，服务同样也会在后台运行。bindservice是与客户端绑定的，客户端退出，service也自动停止</p> <p><strong>BroadcastReceiver</strong></p> <p>静态注册和动态注册</p> <p><strong>ContentProvider</strong></p> <h2 id=\\\"aidl\\\"><a href=\\\"#aidl\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> AIDL</h2> <p>Android Interface Definition Language，接口定义语言，<strong>为了实现进程间的通信</strong></p> <p>每个进程都由自己的Dalvik VM实例，一块独立的内存，存储自己的数据，执行自己的操作。不同的进程不知道相互的信息，则出现了AIDL，通过AIDL制定一些规则，规定它们能进行哪些操作，一个进程可以访问另外一个进程的数据</p> <p>数据类实现Parcelable接口，将需要传输的数据转化为能够在内存之间流通的形式，即序列化与反序列化</p> <h2 id=\\\"view\\\"><a href=\\\"#view\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> View</h2> <p><strong>PopupMenu</strong></p> <p>使用步骤：</p> <p>1、res目录下创建menu文件夹，用例存放菜单资源文件，比如新建一个case_item.xml</p> <div class=\\\"language-java extra-class\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token operator\\\">&lt;</span>menu xmlns<span class=\\\"token operator\\\">:</span>android<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class=\\\"token operator\\\">&gt;</span>\\n    <span class=\\\"token operator\\\">&lt;</span>item\\n        android<span class=\\\"token operator\\\">:</span>id<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">&quot;@+id/test_fun1&quot;</span>\\n        android<span class=\\\"token operator\\\">:</span>title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">&quot;test_fun1&quot;</span><span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">&gt;</span>\\n    <span class=\\\"token operator\\\">&lt;</span>item\\n        android<span class=\\\"token operator\\\">:</span>id<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">&quot;@+id/test_fun2&quot;</span>\\n        android<span class=\\\"token operator\\\">:</span>title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">&quot;test_fun1&quot;</span><span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">&gt;</span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>menu<span class=\\\"token operator\\\">&gt;</span>\\n\\n</code></pre></div><p>2、展示菜单项</p> <div class=\\\"language-java extra-class\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token comment\\\">//创建PopupMenu对象</span>\\n<span class=\\\"token class-name\\\">PopupMenu</span> popup<span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">PopupMenu</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">,</span> button<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">//将R.menu.popup_menu菜单资源加载到popup菜单中</span>\\n<span class=\\\"token function\\\">getMenuInflater</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">inflate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">R</span><span class=\\\"token punctuation\\\">.</span>menu<span class=\\\"token punctuation\\\">.</span>case_item<span class=\\\"token punctuation\\\">,</span> popup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getMenu</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">//设置点击事件</span>\\npopup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setOnMenuItemClickListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">PopupMenu</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">OnMenuItemClickListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token annotation punctuation\\\">@Override</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">boolean</span> <span class=\\\"token function\\\">onMenuItemClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">MenuItem</span> item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                \\n            <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">//展示列表</span>\\npopup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">show</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">//隐藏该对话框</span>\\npopup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dismiss</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>                           \\n</code></pre></div><p><strong>Adapter</strong></p> <p>BaseAdapter、ArrayAdapter、TreeListViewAdapter</p> <h2 id=\\\"应用问题\\\"><a href=\\\"#应用问题\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 应用问题</h2> <p><strong>app崩溃后自动重启问题</strong></p> <p>https://www.jianshu.com/p/eb34c5df30e5</p> <p>https://blog.csdn.net/BeyondWorlds/article/details/79759348</p> <div class=\\\"language-java extra-class\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CrashHandler</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">UncaughtExceptionHandler</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">init</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Context</span> ctx<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDefaultUncaughtExceptionHandler</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">uncaughtException</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Thread</span> thread<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">Throwable</span> ex<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>ex<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getCause</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n                ex <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getCause</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">StringBuilder</span> errInfo <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">StringBuilder</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1024</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            errInfo<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">append</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;uncaughtException: &quot;</span><span class=\\\"token operator\\\">+</span>ex<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">+</span><span class=\\\"token string\\\">&quot;\\\\n&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">StackTraceElement</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> stackTraceElements <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getStackTrace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">StackTraceElement</span> ste <span class=\\\"token operator\\\">:</span> stackTraceElements<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                errInfo<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">append</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;\\\\tat &quot;</span> <span class=\\\"token operator\\\">+</span> ste<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">&quot;\\\\n&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n\\n            <span class=\\\"token class-name\\\">String</span> info <span class=\\\"token operator\\\">=</span> errInfo<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">Log</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">err</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;exception&quot;</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">exit</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">//结束当前进程，关闭当前的JVM</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}