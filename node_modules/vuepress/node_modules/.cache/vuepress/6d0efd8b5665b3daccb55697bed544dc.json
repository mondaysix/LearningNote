{"remainingRequest":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\VersionControl\\gitlearn\\problems.md?vue&type=template&id=670145a0&","dependencies":[{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\VersionControl\\gitlearn\\problems.md","mtime":1564214962662},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559711718187},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1559711718171},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1559711720027}],"contextDependencies":[],"result":["\n<div class=\"content\"><p><strong>一、git查看/修改用户名和密码</strong></p>\n<p>​\t在使用git进行push代码的时候，提示：The Requested URL return error 403，表示没有相关权限来push相关代码</p>\n<p>​\tpush相关代码的那个工程地址与内存和硬盘中缓存的git仓库的账号密码不一致</p>\n<p>解决办法如下：</p>\n<ol>\n<li>执行git config --list，查看user.name和user.email是否与需要push的代码工程仓库账号邮箱一致，不一致需要更改账号</li>\n<li>清除缓存:\ngit config --local --unset credential.helper\ngit config --global --unset credential.helper\ngit config --system --unset credential.helper</li>\n<li>清除缓存后提交代码需要重新输入用户名密码</li>\n<li>查看当前的用户名和邮箱地址：\ngit config user.name\ngit config user.email</li>\n<li>修改用户名和邮箱地址:\ngit config --global user.name &quot;username&quot;\ngit config --global user.email &quot;email&quot;</li>\n</ol>\n<p><strong>二、更新代码至远程仓库流程</strong></p>\n<p><em><strong>提交代码前确认当前的分支以及先更新最新的代码！！！</strong></em></p>\n<p>git branch 查看当前分支</p>\n<p>git pull 更新代码至本地</p>\n<ol>\n<li>git status 查看当前工程中modified了哪些文件</li>\n<li>git add . 一次性添加所有修改过的文件</li>\n<li>git commit -m &quot;修改的相关描述XXX&quot;</li>\n<li>git push origin master 推送到git 远程仓库</li>\n<li>git log 查看提交日志</li>\n</ol>\n<p><strong>三、更新远程代码至本地</strong></p>\n<p>git pull -u origin master:&lt;分支名称&gt;</p>\n<p>默认可直接使用git pull</p>\n<p><strong>四、将文件添加至Index暂存</strong></p>\n<p>git add用于把要提交的文件的信息添加到索引库中</p>\n<p><strong>git add .</strong>  监控工作区的状态树，把工作时的所有变化提交到暂存区，包括modified和new的文件，但是不包括被删除的文件</p>\n<p><strong>git add -u</strong>  仅监控已经被add的文件（tracked file），将被修改的文件提交到暂存区，不会提交untracked file</p>\n<p><strong>git add -A</strong>   是上面两个命令的功能合集</p>\n<p><strong>五、删除远程仓库里的文件夹</strong></p>\n<ol>\n<li>git clone &lt;远程仓库地址&gt;</li>\n<li>git rm -rf &lt;需要删除的文件夹&gt;</li>\n<li>如果需要删除的文件太多了，直接在文件夹里删除，不需要使用rm，但删除后需要执行git add .</li>\n<li>git commit -m &quot;描述语句&quot;</li>\n<li>git push origin master</li>\n</ol>\n<p>如果分支的名称不是master，则提交到git仓库 时，需要显示指定分支名称 git push -u origin master：&lt;分支名称&gt;</p>\n<p><strong>六、分支相关操作</strong></p>\n<ol>\n<li>git branch 查看当前分支</li>\n<li>git checkout &lt;分支名称&gt; 切换到新的分支</li>\n<li>git branch &lt;新分支名称&gt;创建新的分支</li>\n</ol>\n<p><strong>七、使用ssh密钥</strong></p>\n<p>SSH 公钥默认储存在账户的主目录下的 ~/.ssh 目录</p>\n<ol>\n<li>\n<p>cd ./.ssh/</p>\n</li>\n<li>\n<p>ssh-keygen -t rsa -C &quot;email@youremail.com&quot;</p>\n</li>\n<li>\n<p>直接回车就行</p>\n</li>\n<li>\n<p>ls查看下是否生成id_rsa.pub和id_rsa</p>\n</li>\n<li>\n<p>把id_rsa.pub密钥添加到远程仓库中</p>\n</li>\n<li>\n<p>验证下key是否可以正常工作 ssh -T git@github.com</p>\n</li>\n</ol>\n<p><strong>八、下载github仓库中的部分文件夹</strong></p>\n<p>git版本&gt;2.17.1</p>\n<p>要是git的版本低于2.17.1，则需要更新git版本:</p>\n<ul>\n<li>\n<p>2.17.1之前版本用git update</p>\n</li>\n<li>\n<p>2.17.1之后用git update-git-for-windows</p>\n</li>\n</ul>\n<ol>\n<li>创建新文件夹mkdir projects</li>\n<li>git init</li>\n<li>git remote add -f origin git@github.com:username/responsity.git</li>\n<li>git config core.sparseCheckout true</li>\n<li>echo &quot;远程仓库文件夹路径&quot; &gt;&gt; .git/info/sparse-checkout</li>\n<li>git pull origin master</li>\n</ol>\n</div>\n",null]}