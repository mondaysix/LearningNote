{"remainingRequest":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\Language\\python\\Syntax.md?vue&type=template&id=59b7cf23&","dependencies":[{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\Language\\python\\Syntax.md","mtime":1561555039661},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559711718187},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1559711718171},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1559711720027}],"contextDependencies":[],"result":["\n<div class=\"content\"><p><strong>正则表达式</strong></p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">import</span> re\npatt<span class=\"token operator\">=</span><span class=\"token string\">r'[1-5][0-9]'</span>\nmatch <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>patt<span class=\"token punctuation\">,</span><span class=\"token string\">'10.20,30,40,2,3,59,60'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> match<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">)</span>\n\npatt2 <span class=\"token operator\">=</span> <span class=\"token string\">r'[A-C][a-zA-Z]'</span>\nmatch2 <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>patt2<span class=\"token punctuation\">,</span><span class=\"token string\">'10.20,30,40,2,3,59,60,xy,Ab,Bz'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> match2<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>match2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># '10:00am,99:90am,8:00am,19:19pm:14:00pm,5:xm,23:23pm,29:19pm'</span>\n<span class=\"token comment\"># am 00:00~12:00  pm 12:00~23:00</span>\n<span class=\"token comment\">#patt3=r'(1[0-2]|[0-9]):[0-5][0-9][am]'</span>\n<span class=\"token comment\">#patt4=r'(1[2-9]|2[0-3]):[0-5][0-9][pm]'</span>\n<span class=\"token comment\"># ?表示可选项</span>\npatt5<span class=\"token operator\">=</span><span class=\"token string\">r'([0-1]?[0-9]|2[0-3])(:)([0-5][0-9][ap]m)'</span>\nmatch5<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>patt5<span class=\"token punctuation\">,</span><span class=\"token string\">'10:00am,99:90pm,8:00am,19:19pm,14:00pm,5:xm,23:23pm,29:19pm'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> match5<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> match5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>字符串</strong></p>\n<p>1、使用print打印字符串两种方式：%和format</p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\">#方式1</span>\nname<span class=\"token operator\">=</span><span class=\"token string\">\"girl\"</span>\nage<span class=\"token operator\">=</span><span class=\"token number\">18</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your name is %s,age is %d\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#方式2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your name is {0},age is {1}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>2、空值None,None不是0，也不是空字符串，也不是False,它是一个特殊的空值</p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token boolean\">None</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span> <span class=\"token comment\">#true</span>\n<span class=\"token boolean\">None</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span> <span class=\"token comment\">#false</span>\n<span class=\"token boolean\">None</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token comment\">#false</span>\n<span class=\"token boolean\">None</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token comment\">#false</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>3、连接字符串特别是大规模的字符串，最好用join 而不是+</p>\n<p><strong>运算符</strong></p>\n<p><strong>i+=1 不等于++i</strong>，python解释器将++i操作为+（+i）+表示正数</p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}