{"remainingRequest":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\swtest\\test-app.md?vue&type=template&id=71adb224&","dependencies":[{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\swtest\\test-app.md","mtime":1560077844217},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559711718187},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1559711718171},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1559711720027}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"移动端测试\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#移动端测试\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 移动端测试\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"移动端应用分类\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#移动端应用分类\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 移动端应用分类\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"移动端应用分为三大类：web app、native app、hybrid app\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"web app\")]),\n        _vm._v(\n          \":移动端的web浏览器，采用的技术主要是传统的html、javascript、css等web技术栈。web app所访问的页面内容都是放在服务器端的，本质上就是web页面\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"native app\")]),\n        _vm._v(\n          \"：移动端的原生应用，基于手机操作系统（ios和android），并使用原生程序编写运行的第三方应用程序\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"hybrid app\")]),\n        _vm._v(\n          \"：混合型应用，介于web app和native app两者之间的一种app形式。通过一个原生实现的native container展示html5页面，也就是在原生移动应用中潜入了webview，通过webview来访问网页。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\n            \"自适应网页设计（Responsive Web Design）,同一个网页能够自动识别屏幕分辨率、并做出相应调整的网页设计技术\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"移动应用专项测试思路和方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#移动应用专项测试思路和方法\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 移动应用专项测试思路和方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"对于移动应用，顺利完成全部业务功能测试往往不够，当应用被打量用户安装和使用时，可能会出现如下问题：\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"流量使用过多\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"耗电量过大\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"某些终端上出现崩溃或者闪退\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"多个应用相互切换，行为异常\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"某些终端上无法顺利安装或者卸载\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"弱网环境下，无法正常使用\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"android环境下，经常出现ANR\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"主要可通过如下6个专项测试来展开：\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"交叉事件测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"兼容性测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"流量测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"耗电量测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"弱网络测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"边界测试\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"交叉事件测试也叫中断测试\")]),\n        _vm._v(\n          \"，app执行过程中，有其他事件或者应用中断当前应用执行的测试。比如说app在前台运行过程中，突然有电话打进或者收到短信、系统闹钟等等情况\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"需要覆盖的场景包括：\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"多个app同时在后台运行，并交替切换至前台是否影响正常功能\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"相同系统资源的多个app前后台交替切换是否影响正常功能\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"app运行时接听电话、接收信息、提示系统升级、发生系统闹钟、进入低电量模式、第三方安全软件弹出警告框、网络切换\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"兼容性测试\")]),\n        _vm._v(\n          \"，确保app在各种终端设备、各种操作系统版本、各种屏幕分辨率、各种网络环境下功能的正确性。常见覆盖如下测试场景：\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"不同操作系统的兼容性，android和ios版本\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"主流设备分辨率下的兼容性\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"主流移动终端机型的兼容性\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"同一操作系统中，不同语言设置时的兼容性\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"不同网络连接下的兼容性，比如wifi、gprs、edge、cdma2000\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"流量测试\")]),\n        _vm._v(\"，通常覆盖如下测试场景：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"app执行业务操作引起流量\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app在后台运行时的消耗流量\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app安装完成后首次启动耗费的流量\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app安装包本身的大小\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app内购买或者升级需要的流量\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"往往借助android和ios自带的工具进行流量统计，或者利用tcpdump、wireshark、fiddler等网络分析工具\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"android系统，网络流量信息通常存储在/proc/net/dev下，轻量级性能监控小工具emmagee，可用实时显示app运行过程中cpu、内存和流量等信息\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"ios系统，使用xcode自带的性能分析工具集中的network activity\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"流量测试的最终目的，并不是得到app的流量数据，而是减少app产生的流量。常用减少流量产生的方法:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"启用数据压缩，尤其是图片\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"使用优化的数据格式，比如使用json比xml要小\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"遇到既要压缩又要加密的，一定要先压缩再加密\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"减少单次GUI访问调用后台的次数\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"每次回传数据尽量只包含必要的数据\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"启用客户端的缓存机制\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"耗电量测试\")]),\n        _vm._v(\"，通常从三个方面来考量：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"app运行时但没有执行业务操作的耗电量\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app运行且执行业务密集的耗电量\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app后台运行的耗电量\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"耗电量测试既有通过硬件检测的也有通过软件测试的\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"android通过adb命令：adb shell dumpsys battery\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"ios通过apple的官方工具sysdiagnose\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"**弱网络测试，**移动应用的网络环境多样化，即使同一网络环境下，也会出现网络时好时坏的情况，比如时高时低的延迟、丢包、频繁断线，在乘坐地铁或者地下停车场、电梯内常出现。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"移动应用的测试需要尽量保证在复杂网络环境下的质量。在测试阶段，尽量模拟这些环境，在app上线前发现较多的问题并修复。移动开源的测试工具：ATC\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"边界测试\")]),\n        _vm._v(\n          \"，移动app在一些临界条件下的行为功能的验证测试，尽量找出所有的临界场景并对其进行验证测试。主要的场景有：\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"系统内存占用大于90%\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"系统存储占用大于95%\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"飞行模式来回切换多次\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"app不具有某些系统访问权限\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"长时间使用app是否会出现系统异常，比如内存泄漏、过多的链接数\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"ANR\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"时区切换\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"操作系统时间早于或者晚于标准时间\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"appium工具\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#appium工具\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Appium工具\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"appium自动化测试框架，支持ios和android的app自动化测试\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"app测试常见问题\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#app测试常见问题\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" APP测试常见问题\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"app分为android 和ios 版，那么两者有什么区别呢？\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"android端分辨率较多，ios较少\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"android端操作系统较多，ios较少\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"android端下载和安装的平台和工具渠道较多，ios主要有app store、iTunes\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"app测试点\")])]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"功能测试：具体功能点是否都实现\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"边界分析测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"存储测试：屏幕旋转、连续加载页面、多个窗口、应用互相调用、多线程下载等等\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"性能测试：响应时间、流量测试、耗电量测试、内存、cpu、温度\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"兼容性测试：手机设备，不同品牌，不同分辨率，不同安卓版本，不同操作系统，可以使用商业工具testin\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"安装卸载测试：应用可正常安装、卸载可运行\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"交叉事件测试：操作过程中，来电话、短信、电量不足等外部事件\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"操作类型测试：横屏、手势测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"网络测试：弱网和网络切换测试\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"压力测试：大用户量，交互性高的应用对接口执行压力测试\")\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}