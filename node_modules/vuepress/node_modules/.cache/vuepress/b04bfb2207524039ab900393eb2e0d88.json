{"remainingRequest":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\mysql\\operate.md?vue&type=template&id=7fffd59f&","dependencies":[{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\docs\\mysql\\operate.md","mtime":1561556894044},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1559711718187},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559711637495},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vue-loader\\lib\\index.js","mtime":1559711718171},{"path":"C:\\Users\\Objec\\Desktop\\LearningNote\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1559711720027}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"mysql5-7服务无法启动问题\"><a class=\"header-anchor\" href=\"#mysql5-7服务无法启动问题\" aria-hidden=\"true\">#</a> mysql5.7服务无法启动问题</h2>\n<p>以mysql 5.7.17 版本为例</p>\n<p><strong>方式1</strong></p>\n<ol>\n<li>\n<p>进入mysql server安装的路径: cd C:\\Program Files\\MySQL\\MySQL Server 5.7</p>\n</li>\n<li>\n<p>如果目录下有data文件的先删除掉data文件</p>\n</li>\n<li>\n<p>清除掉原来的服务:<strong>mysqld remove</strong></p>\n</li>\n<li>\n<p>重新安装服务: <strong>mysqld -install</strong></p>\n</li>\n<li>\n<p>产生无密码的帐号: <strong>mysqld --initialize-insecure</strong></p>\n</li>\n<li>\n<p>启动服务:<strong>net start mysql</strong></p>\n</li>\n<li>\n<p>登录数据库：<strong>mysql -u root -p</strong> 直接回车不输入密码</p>\n</li>\n<li>\n<p>此时若是需要修改密码的话，可继续操作</p>\n</li>\n<li>\n<p>修改root密码：</p>\n<p><strong>update user set authentication_string=password('123456') where user=&quot;root&quot;;</strong></p>\n<p><strong>flush privileges;</strong></p>\n</li>\n<li>\n<p>退出数据库<strong>exit</strong>后重新使用新的密码登录即可</p>\n</li>\n</ol>\n<p><strong>方式2</strong></p>\n<p>启动services.msc里的mysql服务重新启动失败，提示“本地计算机上的MySQL服务启动后停止。某些服务在未由其他服务或程序使用时将自动”，可参考如下方式：</p>\n<p>1.首先需要把原来的服务删除，执行如下操作:</p>\n<ul>\n<li>cd C:\\Program Files\\MySQL\\MySQL Server 5.7</li>\n<li><strong>mysqld --remove mysql</strong></li>\n<li>进入bin目录</li>\n<li><strong>mysqld--initialize-insecure --user=mysql</strong></li>\n<li>注册服务<strong>mysqld --install mysql --defaults-file=C:\\Program Files\\MySQL\\MySQL Server 5.7\\my.ini</strong></li>\n<li>启动服务:<strong>net start mysql</strong></li>\n</ul>\n<h2 id=\"access-denied-for-user-‘root’-‘localhost’-using-password-yes-问题\"><a class=\"header-anchor\" href=\"#access-denied-for-user-‘root’-‘localhost’-using-password-yes-问题\" aria-hidden=\"true\">#</a> Access denied for user ‘root’@‘localhost’ (using password: YES)问题</h2>\n<p>输入正确用户名和密码登录失败，弹出access denied，可用跳过验证重新设置密码</p>\n<ol>\n<li>\n<p><strong>使用管理员权限打开cmd</strong>,先看services.msc里的mysql服务是否已经关闭</p>\n</li>\n<li>\n<p>进入安装路径执行如下操作</p>\n<p>cd C:\\Program Files\\MySQL\\MySQL Server 5.7\\bin</p>\n<p>mysqld --initialize</p>\n<p>mysqld --install mysql --defaults-file=C:\\Program Files\\MySQL\\MySQL Server 5.7\\my.ini</p>\n<p>net stop mysql</p>\n<p>mysqld --skip-grant-tables</p>\n</li>\n<li>\n<p>同样使用管理员权限另外开一个cmd窗口，执行如下操作</p>\n<p>mysql -u root</p>\n<p>update user set authentication_string=password('123456') where user=&quot;root&quot;;</p>\n<p>flush privileges;</p>\n<p>关闭该窗口</p>\n</li>\n<li>\n<p>​\t再重新启动mysql服务</p>\n<p>net start mysql</p>\n<p>mysql -u root -p 输入之前修改的密码可正常登录</p>\n<p>若是正常登录后提示“ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.”则执行alter user user() identified by &quot;123456&quot;;</p>\n</li>\n</ol>\n<h2 id=\"创建用户并赋予权限\"><a class=\"header-anchor\" href=\"#创建用户并赋予权限\" aria-hidden=\"true\">#</a> 创建用户并赋予权限</h2>\n<p>首先查看各个用户的权限情况</p>\n<p>​\t<strong>select user,host,grant_priv from mysql.user;</strong></p>\n<p>若是当前用户登录下的grant_priv为N，则需要修改权限</p>\n<p>​\t<strong>update user set grant_priv='Y' where user='username';</strong></p>\n<p><strong>FLUSH PRIVILEGES;</strong></p>\n<p>再创建一个新的用户并赋予权限</p>\n<p>​\t<strong>create user 'username'@'%' identified by 'username';</strong>(通配符%表示让该用户从任意远程主机登录，如果是本地用户可以用localhost替换%)</p>\n<p>​\t<em><em>grant select,insert,update,delete,create on databasename.</em> to username;</em>*</p>\n<p>​\t<strong>FLUSH PRIVILEGES;</strong></p>\n<h2 id=\"撤销用户权限\"><a class=\"header-anchor\" href=\"#撤销用户权限\" aria-hidden=\"true\">#</a> 撤销用户权限</h2>\n<p><em><em>revoke select,insert,update,delete,create on databasename.</em> from 'username'@'%';</em>*</p>\n<h2 id=\"备份数据库问题\"><a class=\"header-anchor\" href=\"#备份数据库问题\" aria-hidden=\"true\">#</a> 备份数据库问题</h2>\n<p>备份数据库：<strong>mysqldump -u root -p --all-databases &gt; dumpdata.sql</strong></p>\n<p>恢复数据库 <strong>source dumpdata.sql</strong> 或者直接把sql脚本放在workbench里执行</p>\n<h2 id=\"创建触发器\"><a class=\"header-anchor\" href=\"#创建触发器\" aria-hidden=\"true\">#</a> 创建触发器</h2>\n<p>​\tCREATE TRIGGER trigger_name trigger_time trigger_event ON tb_name FOR EACH ROW trigger_stmt\n​\t\ttrigger_name：触发器的名称\n​\t\ttirgger_time：触发时机，为BEFORE或者AFTER\n​\t\ttrigger_event：触发事件，为INSERT、DELETE或者UPDATE\n​\t\ttb_name：表示建立触发器的表明，就是在哪张表上建立触发器\n​\t\ttrigger_stmt：触发器的程序体，可以是一条SQL语句或者是用BEGIN和END包含的多条语句\n​\t所以可以说MySQL创建以下六种触发器：BEFORE INSERT,BEFORE DELETE,BEFORE UPDATE,AFTER INSERT,AFTER DELETE,AFTER UPDATE</p>\n<h2 id=\"mysql经常弹出提示框：unable-to-connect-to-remote-host-catalog-download-has-failed\"><a class=\"header-anchor\" href=\"#mysql经常弹出提示框：unable-to-connect-to-remote-host-catalog-download-has-failed\" aria-hidden=\"true\">#</a> MySQL经常弹出提示框：Unable to connect to remote host. Catalog download has failed</h2>\n<p>具体如下图：</p>\n<p><img src=\"/img/shot5.PNG\" alt=\"shot1\"></p>\n<p>该问题是由于新版本的 Mysql 在安装的时候会自动在 Windows 的“任务计划程序”中安装一个定时任务</p>\n<p>打开“控制面板”，查看方式选择“小图标”，找到“管理工具”项，点击“任务计划程序”，找到列表中的MySQL-&gt;Installer选择名称为“ManifestUpdate”任务，右键菜单点击“禁用”项，完成任务禁用。也可以点击右侧的“禁用”</p>\n<h2 id=\"实践sql语句\"><a class=\"header-anchor\" href=\"#实践sql语句\" aria-hidden=\"true\">#</a> 实践SQL语句</h2>\n<!--beforebegin--><div class=\"language-mysql extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>## 创建、删除、查询数据库\ncreate database sonar character set utf8 collate utf8_general_ci;\ndrop database sonarqubedb;\nshow databases;\n\n## 创建用户并赋予权限\nCREATE USER &#39;sonaruser&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;\ncreate user &#39;sonaruser&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;\ngrant all on *.* to &#39;sonaruser&#39;@&#39;%&#39;;\nflush privileges;\ngrant all on *.* to &#39;sonaruser&#39;@&#39;localhost&#39;;\n\n## 指定数据库下创建表\nuse sonarqubedb;\ncreate table employee(\n\tename varchar(10),\n    hiredate date,\n    sal decimal(10,2),\n    deptno int(2)\n);\ncreate table dept(\n\tdeptno int(2),\n    deptname varchar(20)\n);\n## 查询表数据及表信息\nshow tables;\ndesc employee; -- 查看表信息\nshow create table employee \\G; -- 显示表详细信息\n-- information_schema 存储系统中一些数据库对象信息，比如用户表信息、权限信息、列信息等等\n-- mysql 存储系统的用户权限信息\n## 修改表的属性、数据等等操作\nalter table employee modify ename varchar(20);\nalter table employee add column age int(3);\nalter table employee drop column age;\nalter table employee change column age age1 int(4);\nalter table employee add birth date after ename;\nalter table employee modify age1 int(3) first;\nalter table employee rename employee1;\n/**\n\tDML操作，主要是insert update delete select\n*/\ninsert into employee(ename,sal) values(&#39;dony&#39;,1000),(&#39;dony2&#39;,2000);\ninsert into employee(ename,sal,hiredate,deptno) values(&#39;zzz&#39;,100,&#39;2019-1-1&#39;,1),(&#39;lisa&#39;,200,&#39;2018-1-1&#39;,2),(&#39;qwe&#39;,100,&#39;2017-1-1&#39;,1),(&#39;zzz&#39;,2000,&#39;2016-1-1&#39;,4);\nupdate employee set ename=&#39;abc&#39; where sal=&#39;1000&#39;;\ninsert into dept(deptno,deptname) value(1,&#39;tech&#39;),(2,&#39;sale&#39;),(5,&#39;test&#39;);\ninsert into dept(deptno,deptname) value(6,&#39;fin&#39;);\nupdate employee a,dept b set a.sal = a.sal*b.deptno,b.deptname=a.ename where a.deptno = b.deptno;\n\ndelete from employee where ename=&#39;abc&#39;;\nselect * from dept;\nupdate dept set deptname=&#39;hr&#39; where deptno=2;\nselect * from employee;\nselect distinct deptno from employee order by deptno desc;\n\nselect * from employee order by deptno,sal desc limit 1,4;\nselect deptno,count(1) from employee group by deptno with rollup;\nselect deptno,count(1) from employee group by deptno having count(1)&gt;1;\n-- 表连接 内连接：仅选出两张表中互相匹配的记录，也就是两个表的交集\nselect ename,deptname from employee,dept where employee.deptno=dept.deptno;\n-- 左（外）连接，将左表的记录全部显示出来，右表只会显示符合搜索条件的记录，右表记录不足的地方为null\nselect ename,deptname from employee left join dept on employee.deptno = dept.deptno; \nselect ename,deptname from dept left join employee on dept.deptno = employee.deptno; \n-- 右（外）连接，刚好与左连接相反\n\n-- 子查询\nselect * from employee where deptno in(select deptno from dept);\n\nselect deptno from employee union  select deptno from dept; -- union union all\n\n/**\n\tDCL:DBA管理系统中的对象权限时用到\n*/\ngrant select,insert on sonarqubedb.* to &#39;&#39; identified by &#39;root&#39;;\n-- 收回权限\nrevoke insert,select on sonarqubedb.* from &#39;root@localhost&#39;;\n-- 命令行模式下，查看支持哪些数据类型 ? data types 若想知道具体某个数据类型的信息 ? int\n-- 快速查看某项语法，使用关键字进行快速查询 ? show\n-- https://dev.mysql.com/doc/\n-- 存储引擎\ncreate table myisam_char(name char(10)) engine=MyISAM;\ninsert into myisam_char values(&quot;abc&quot;),(&quot;abc  &quot;),(&quot;  abc&quot;),(&quot;  abc  &quot;);\nselect name,length(name) from myisam_char;\nshow variables like &#39;table_type&#39;;\nshow engines;\n\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}